#pragma once
#include "Core\HopStepCore.h"
#include "Class.h"

using namespace HopStep::CoreObject::Reflection;

/*
	Defines used by HeaderTool parsing.
	Ignore their inner contents before additional file generated.
*/
#define HCLASS(...)
#define HENUM(...)
#define HPROPERTY(...)
#define HFUNCTION(...)

#define DECLARE_TYPEHASH \
	size_t GetTypeHash() const \
	{ \
		static size_t UniquePointer; \
		return reinterpret_cast<size_t>(&UniquePointer); \
	}							

#define DECLARE_CLASS_BODY(Class, ...) \
public: \
	DECLARE_TYPEHASH \
\
	friend class HStruct; \
	using ThisClass = Class; \
	inline static constexpr HopStep::HStringView FriendlyName = L ## #Class; \
\
	static class HClass* StaticClass(); \
\
private: \
	static void __Fill_Class_Property_##Class(class HClass*); \
	friend struct HStructBuilder;


/*
	Using declare / define HFunction property in autogenerated boilerplate code.
*/
#define DECLARE_FUNCTION(func) static void func(HFunctionCallFrame& Frame)
#define DEFINE_FUNCTION(func) void func(HFunctionCallFrame& Frame)
